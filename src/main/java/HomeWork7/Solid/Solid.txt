Принципы SOLID:
    1)Single Responsibility Principle (Принцип единственной ответственности) - Каждый класс должен иметь только одну зону ответственности.

    2)Open Closed Principle (Принцип открытости/закрытости) - Классы должны быть открыты для расширения, но закрыты для изменения.

    3)Liskov’s Substitution Principle (Принцип подстановки Барбары Лисков) - Должна быть возможность вместо базового (родительского) типа (класса),
    подставить любой его подтип (класс-наследник), при этом работа программы не должна измениться.

    4)Interface Segregation Principle (Принцип разделения интерфейса) - Данный принцип обозначает,
    что не нужно заставлять клиента (класс) реализовывать интерфейс, который не имеет к нему отношения.

    5)Dependency Inversion Principle (Принцип инверсии зависимостей) - Модули верхнего уровня не должны зависеть от модулей нижнего уровня.
    И те, и другие должны зависеть от абстракции. Абстракции не должны зависеть от деталей. Детали должны зависеть от абстракций.